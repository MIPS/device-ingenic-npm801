#!/bin/bash
#
# Copyright (c) 2017 Mips Tech LLC
# Author: Dragan Cecavac <dragan.cecavac@mips.com>
#
# Flashes/erases partitions.
# Reboots the board once everything is set up.
#
# Usage:
#   ./fastboot-flash-all [device_id]
#

die()
{
  echo "Error: $@" >&2
  exit 1
}

check_environment()
{
	# Check for adb
	[ -z `which adb 2>&1` ] && die "No 'adb' present"

	# Check for diff
	[ -z `which diff 2>&1` ] && die "No 'diff' present"

	# Check for fastboot
	[ -z `which fastboot 2>&1` ] && die "No 'fastboot' present"

	# Check for grep
	[ -z `which grep 2>&1` ] && die "No 'grep' present"

	# Check for wc
	[ -z `which wc 2>&1` ] && die "No 'wc' present"

	# Check if $OUT is defined
	[ -z $OUT ] && die '$OUT is not defined'

	# Check if $ANDROID_BUILD_TOP is defined
	[ -z $ANDROID_BUILD_TOP ] && die '$ANDROID_BUILD_TOP is not defined'

	# Check if boot.img exists
	[ ! -f "$OUT/boot.img" ] && die "Android boot image '$OUT/boot.img' not found"

	# Check if recovery.img exists
	[ ! -f "$OUT/recovery.img" ] && die "Android recovery image '$OUT/recovery.img' not found"

	# Check if system.img exists
	[ ! -f "$OUT/system.img" ] && die "Android system image '$OUT/system.img' not found"

	# Check if cache.img exists
	[ ! -f "$OUT/cache.img" ] && die "Android cache image '$OUT/cache.img' not found"

	# Check if userdata.img exists
	[ ! -f "$OUT/userdata.img" ] && die "Android userdata image '$OUT/userdata.img' not found"

	# Check if device tree blob exists
	dtb="$ANDROID_BUILD_TOP/device/ingenic/npm801/dtb/npm801-sdcard.dtb"
	[ ! -f "$dtb" ] && die "'$dtb' not found"
}

perform_calculations()
{
	# Get connected adb device list and their number
	adb_devices=`adb devices`
	adb_device_num=$((`echo -e "${adb_devices}" | grep npm801 | wc -l`))

	# Get connected fastboot device list and their number
	fastboot_devices=`fastboot devices`
	fastboot_device_num=$((`echo "${fastboot_devices}" | grep npm801 | wc -l`))

	# Sum of all connected devices
	connected_devices=$(($adb_device_num + $fastboot_device_num))
}

ensure_fastboot_mode()
{
	# Report error if no devices are connected
	[ $connected_devices -lt 1 ] && die "No devices connected."

	# Report error if it is not clear which device to use
	[ -z "$device_id_option" ] && [ $connected_devices -gt 1 ] && die "No device is specified and there are $connected_devices devices connected."

	if [ -z "$device_id_option" ]; then
		# If unspecified device is in adb mode, reboot it to fastboot
		# If it isn't in adb mode, it means it's already in fastboot mode
		if [ "$adb_device_num" -eq 1 ]; then
			adb reboot-bootloader
			echo "Rebooting to fastboot, please wait."
		fi
	else
		# Check if the specified device is already in fastboot mode
		if [ "$fastboot_device_num" -gt 0 ]; then
			fastboot_device_array=($fastboot_devices)
			for i in "${fastboot_device_array[@]}"; do
				[ "$i" == "$1" ] && return
			done
		fi

		# If the specified device is in adb mode, reboot it to fastboot mode
		if [ "$adb_device_num" -gt 0 ]; then
			adb_device_array=($adb_devices)
			for i in "${adb_device_array[@]}"; do
				if [ "$i" == "$1" ]; then
					adb $device_id_option reboot-bootloader
					echo "Rebooting to fastboot, please wait."
					return
				fi
			done
		fi

		die "The specified device '$1' is not connected."
	fi
}

flash_all_ext4_f2fs()
{
	fastboot $device_id_option flash cache
	fastboot $device_id_option flash userdata
	fastboot $device_id_option flash dtb $dtb
	fastboot $device_id_option flashall
}

flash_all()
{
	fsType=`fastboot $device_id_option getvar partition-type:system 2>&1`

	case $fsType in
		*ext4*)
			flash_all_ext4_f2fs
			return
			;;
		*)
			die "Unrecognized file system type"
		;;
	esac
}

# Setup device_id_option
[ -n "$1" ] && device_id_option="-s $1"

check_environment
perform_calculations
ensure_fastboot_mode $1
flash_all

echo "Successful completion."
